var searchData=
[
  ['z_16029',['z',['../d3/d8d/class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine.html#a4aee628465815bb6c3ae88595d3651ad',1,'QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::z()'],['../d3/d17/class_quant_lib_1_1_moment_based_gaussian_polynomial.html#aa60b7f4d94704d4be993b9f913da8503',1,'QuantLib::MomentBasedGaussianPolynomial::z()']]],
  ['z0_16030',['z0',['../d6/d67/class_quant_lib_1_1_l_p_p2_heston_expansion.html#a574f3dada885fbe06032683be1641236',1,'QuantLib::LPP2HestonExpansion::z0()'],['../d7/dde/class_quant_lib_1_1_l_p_p3_heston_expansion.html#a574f3dada885fbe06032683be1641236',1,'QuantLib::LPP3HestonExpansion::z0()']]],
  ['z1_16031',['z1',['../dd/d3a/class_quant_lib_1_1_analytic_holder_extensible_option_engine.html#a54d75572c8c1a9efa89f53b33aca42eb',1,'QuantLib::AnalyticHolderExtensibleOptionEngine::z1()'],['../d6/d67/class_quant_lib_1_1_l_p_p2_heston_expansion.html#afaf0a1800a28cfc3a8ae681e2fc048df',1,'QuantLib::LPP2HestonExpansion::z1()'],['../d7/dde/class_quant_lib_1_1_l_p_p3_heston_expansion.html#afaf0a1800a28cfc3a8ae681e2fc048df',1,'QuantLib::LPP3HestonExpansion::z1()']]],
  ['z1_5ff_16032',['z1_f',['../d2/d9a/class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine.html#abb8f856f973c9c4e79766d3f25e491b6',1,'QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine']]],
  ['z2_16033',['z2',['../dd/d3a/class_quant_lib_1_1_analytic_holder_extensible_option_engine.html#a907882d7c365cad3fdf5346b8959daf8',1,'QuantLib::AnalyticHolderExtensibleOptionEngine::z2()'],['../d6/d67/class_quant_lib_1_1_l_p_p2_heston_expansion.html#ac168295c47665cae21030ff4c3d1bb65',1,'QuantLib::LPP2HestonExpansion::z2()'],['../d7/dde/class_quant_lib_1_1_l_p_p3_heston_expansion.html#ac168295c47665cae21030ff4c3d1bb65',1,'QuantLib::LPP3HestonExpansion::z2()']]],
  ['z2_5ff_16034',['z2_f',['../d2/d9a/class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine.html#a9e1301c6b65ed8a5f3d35a08602fbcb7',1,'QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine']]],
  ['z3_16035',['z3',['../d7/dde/class_quant_lib_1_1_l_p_p3_heston_expansion.html#a1be9af690267367d2b723de5e54bdc56',1,'QuantLib::LPP3HestonExpansion']]],
  ['z3_5ff_16036',['z3_f',['../d2/d9a/class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine.html#a33d2299e5a9802adedaab3f8cb5c40fd',1,'QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine']]],
  ['z4_5ff_16037',['z4_f',['../d2/d9a/class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine.html#a470630365039d9a671f954e7cf5ea008',1,'QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine']]],
  ['zabr_16038',['Zabr',['../da/d23/class_quant_lib_1_1_zabr.html#a55b53e703dc8c4f2764a0c9c2764912f',1,'QuantLib::Zabr']]],
  ['zabrinterpolatedsmilesection_16039',['ZabrInterpolatedSmileSection',['../d0/d6a/class_quant_lib_1_1_zabr_interpolated_smile_section.html#a91cdbc2ef24a2c80951d77353befb7b2',1,'QuantLib::ZabrInterpolatedSmileSection::ZabrInterpolatedSmileSection(const Date &amp;optionDate, Handle&lt; Quote &gt; forward, const std::vector&lt; Rate &gt; &amp;strikes, bool hasFloatingStrikes, Handle&lt; Quote &gt; atmVolatility, const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;volHandles, Real alpha, Real beta, Real nu, Real rho, Real gamma, bool isAlphaFixed=false, bool isBetaFixed=false, bool isNuFixed=false, bool isRhoFixed=false, bool isGammaFixed=false, bool vegaWeighted=true, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; method=ext::shared_ptr&lt; OptimizationMethod &gt;(), const DayCounter &amp;dc=Actual365Fixed())'],['../d0/d6a/class_quant_lib_1_1_zabr_interpolated_smile_section.html#a8509913d9ec6e5903f2b55067141fa88',1,'QuantLib::ZabrInterpolatedSmileSection::ZabrInterpolatedSmileSection(const Date &amp;optionDate, const Rate &amp;forward, const std::vector&lt; Rate &gt; &amp;strikes, bool hasFloatingStrikes, const Volatility &amp;atmVolatility, const std::vector&lt; Volatility &gt; &amp;vols, Real alpha, Real beta, Real nu, Real rho, Real gamma, bool isAlphaFixed=false, bool isBetaFixed=false, bool isNuFixed=false, bool isRhoFixed=false, bool isGammaFixed=false, bool vegaWeighted=true, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; method=ext::shared_ptr&lt; OptimizationMethod &gt;(), const DayCounter &amp;dc=Actual365Fixed())']]],
  ['zabrinterpolation_16040',['ZabrInterpolation',['../da/d25/class_quant_lib_1_1_zabr_interpolation.html#aa8fe5beaa34efaf3b56485e7ba09f841',1,'QuantLib::ZabrInterpolation']]],
  ['zabrmodel_16041',['ZabrModel',['../d4/dee/class_quant_lib_1_1_zabr_model.html#af0dfacf906bb5e9df01c054daef318f0',1,'QuantLib::ZabrModel']]],
  ['zabrsmilesection_16042',['ZabrSmileSection',['../dc/de7/class_quant_lib_1_1_zabr_smile_section.html#a866cd1fce4538f418e2260bb14509169',1,'QuantLib::ZabrSmileSection::ZabrSmileSection(Time timeToExpiry, Rate forward, std::vector&lt; Real &gt; zabrParameters, const std::vector&lt; Real &gt; &amp;moneyness=std::vector&lt; Real &gt;(), Size fdRefinement=5)'],['../dc/de7/class_quant_lib_1_1_zabr_smile_section.html#a2e65c06274d5db683eb0d5d1e36ee7fd',1,'QuantLib::ZabrSmileSection::ZabrSmileSection(const Date &amp;d, Rate forward, std::vector&lt; Real &gt; zabrParameters, const DayCounter &amp;dc=Actual365Fixed(), const std::vector&lt; Real &gt; &amp;moneyness=std::vector&lt; Real &gt;(), Size fdRefinement=5)']]],
  ['zacpi_16043',['ZACPI',['../d2/d52/class_quant_lib_1_1_z_a_c_p_i.html#a6e3160c897021a6a1ce45c832306d795',1,'QuantLib::ZACPI']]],
  ['zarcurrency_16044',['ZARCurrency',['../da/d1f/class_quant_lib_1_1_z_a_r_currency.html#ac0040e7de3a8fb02f7ff32ad7608aab2',1,'QuantLib::ZARCurrency']]],
  ['zaregion_16045',['ZARegion',['../d2/d5f/class_quant_lib_1_1_z_a_region.html#aa17f11d3cfdc27b38503196280a915fc',1,'QuantLib::ZARegion']]],
  ['zdata_16046',['zData',['../de/df5/class_quant_lib_1_1_flat_extrapolator2_d_1_1_flat_extrapolator2_d_impl.html#a0ed46101b0a8cabe37d5f5636710c2e0',1,'QuantLib::FlatExtrapolator2D::FlatExtrapolator2DImpl::zData()'],['../de/d86/class_quant_lib_1_1_interpolation2_d_1_1_impl.html#a2ffa5169a058d900c4503c6b59c315ab',1,'QuantLib::Interpolation2D::Impl::zData()'],['../d2/db2/class_quant_lib_1_1_interpolation2_d_1_1template_impl.html#a0ed46101b0a8cabe37d5f5636710c2e0',1,'QuantLib::Interpolation2D::templateImpl::zData()'],['../dd/d7a/class_quant_lib_1_1_interpolation2_d.html#adae5c2cfc16dac6a885058dd20df46a3',1,'QuantLib::Interpolation2D::zData()']]],
  ['zeccurrency_16047',['ZECCurrency',['../d7/d07/class_quant_lib_1_1_z_e_c_currency.html#a01891d6a55bd80c1e511b915f0250958',1,'QuantLib::ZECCurrency']]],
  ['zerobond_16048',['zerobond',['../dc/d04/class_quant_lib_1_1_gaussian1d_model.html#a9dee615ddc77f2b0a8e99c200ba9f179',1,'QuantLib::Gaussian1dModel::zerobond(Time T, Time t=0.0, Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const'],['../dc/d04/class_quant_lib_1_1_gaussian1d_model.html#ae719cf1bde09d0db6de943d0f8abde2c',1,'QuantLib::Gaussian1dModel::zerobond(const Date &amp;maturity, const Date &amp;referenceDate=Null&lt; Date &gt;(), Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const']]],
  ['zerobondarray_16049',['zerobondArray',['../d6/dca/class_quant_lib_1_1_markov_functional.html#a5fcc4977cb095b52f13b6dea83842893',1,'QuantLib::MarkovFunctional']]],
  ['zerobondimpl_16050',['zerobondImpl',['../dc/d04/class_quant_lib_1_1_gaussian1d_model.html#a59a6b6140f0639be64a8942ba71f96d1',1,'QuantLib::Gaussian1dModel::zerobondImpl()'],['../db/dd8/class_quant_lib_1_1_gsr.html#a06f9f1a8a25427f91e94325786df4f46',1,'QuantLib::Gsr::zerobondImpl()'],['../d6/dca/class_quant_lib_1_1_markov_functional.html#a06f9f1a8a25427f91e94325786df4f46',1,'QuantLib::MarkovFunctional::zerobondImpl()']]],
  ['zerobondoption_16051',['zerobondOption',['../dc/d04/class_quant_lib_1_1_gaussian1d_model.html#ac87a8ea97dfd0ee469aad42a0fa81109',1,'QuantLib::Gaussian1dModel']]],
  ['zerocouponbond_16052',['ZeroCouponBond',['../da/d3a/class_quant_lib_1_1_zero_coupon_bond.html#ae285da9b726c82741bc75ea4b379c42c',1,'QuantLib::ZeroCouponBond']]],
  ['zerocouponinflationswap_16053',['ZeroCouponInflationSwap',['../d4/d56/class_quant_lib_1_1_zero_coupon_inflation_swap.html#a8fbe4b80ac07c67a74beecd10253885d',1,'QuantLib::ZeroCouponInflationSwap']]],
  ['zerocouponinflationswaphelper_16054',['ZeroCouponInflationSwapHelper',['../d5/d87/class_quant_lib_1_1_zero_coupon_inflation_swap_helper.html#a39305f2699855af0da1693a35f1bf74f',1,'QuantLib::ZeroCouponInflationSwapHelper']]],
  ['zerohelper_16055',['ZeroHelper',['../d0/d55/class_quant_lib_1_1_markov_functional_1_1_zero_helper.html#a9359b6c56cf37fdfa907154a0a1ed9f3',1,'QuantLib::MarkovFunctional::ZeroHelper']]],
  ['zeroinflationindex_16056',['ZeroInflationIndex',['../db/d74/class_quant_lib_1_1_zero_inflation_index.html#a2d3679efd88e7b1d8d0ef041394363dc',1,'QuantLib::ZeroInflationIndex::ZeroInflationIndex()'],['../d8/dca/class_quant_lib_1_1_c_p_i_cap_floor_term_price_surface.html#ab11218eb0a2a8173bf6f3b625cac9900',1,'QuantLib::CPICapFloorTermPriceSurface::zeroInflationIndex()']]],
  ['zeroinflationtermstructure_16057',['zeroInflationTermStructure',['../db/d74/class_quant_lib_1_1_zero_inflation_index.html#a699187052cee149685fe10a6ac29b7d7',1,'QuantLib::ZeroInflationIndex::zeroInflationTermStructure()'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#aadb6024410eb0d93161b5f18446209f4',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a64bcf41d077debc4e27822f121fb404f',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(const Date &amp;referenceDate, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#ab6596a4510190b279b45339d4fef4047',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(Natural settlementDays, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a8acc926acc0480eb24eaef78942b4dc8',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const Handle&lt; YieldTermStructure &gt; &amp;yTS, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a81e8a5ecef9983740947f64d5518c930',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(const Date &amp;referenceDate, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const Handle&lt; YieldTermStructure &gt; &amp;yTS, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a5ac357427733ea98ee2ca1c3165ec508',1,'QuantLib::ZeroInflationTermStructure::ZeroInflationTermStructure(Natural settlementDays, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseZeroRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const Handle&lt; YieldTermStructure &gt; &amp;yTS, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality=ext::shared_ptr&lt; Seasonality &gt;())']]],
  ['zerorate_16058',['zeroRate',['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a2a3a62f6ef7ebaf65ee70404c954cc01',1,'QuantLib::ZeroInflationTermStructure::zeroRate(const Date &amp;d, const Period &amp;instObsLag=Period(-1, Days), bool forceLinearInterpolation=false, bool extrapolate=false) const'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#a24582556ffb5b2d268d9ef57de84b07d',1,'QuantLib::ZeroInflationTermStructure::zeroRate(Time t, bool extrapolate=false) const'],['../d4/d11/class_quant_lib_1_1_yield_term_structure.html#aa055828cc9c2c181ac05401da5a2adee',1,'QuantLib::YieldTermStructure::zeroRate(const Date &amp;d, const DayCounter &amp;resultDayCounter, Compounding comp, Frequency freq=Annual, bool extrapolate=false) const'],['../d4/d11/class_quant_lib_1_1_yield_term_structure.html#a581cb95cc8d59a69ad7e20c0e2177fb9',1,'QuantLib::YieldTermStructure::zeroRate(Time t, Compounding comp, Frequency freq=Annual, bool extrapolate=false) const']]],
  ['zerorateimpl_16059',['zeroRateImpl',['../d7/d3f/class_quant_lib_1_1_interpolated_zero_inflation_curve.html#a283e2179f994b723ea6a73f88e9250db',1,'QuantLib::InterpolatedZeroInflationCurve::zeroRateImpl()'],['../d0/deb/class_quant_lib_1_1_zero_inflation_term_structure.html#aca52e7fe785fca72b56319107c8f47b0',1,'QuantLib::ZeroInflationTermStructure::zeroRateImpl()']]],
  ['zerorates_16060',['zeroRates',['../d3/dc8/class_quant_lib_1_1_interpolated_simple_zero_curve.html#a698613eb44def90895a914f1f0da1f80',1,'QuantLib::InterpolatedSimpleZeroCurve::zeroRates()'],['../d1/d87/class_quant_lib_1_1_interpolated_zero_curve.html#a698613eb44def90895a914f1f0da1f80',1,'QuantLib::InterpolatedZeroCurve::zeroRates()']]],
  ['zerospreadedtermstructure_16061',['ZeroSpreadedTermStructure',['../dd/d6e/class_quant_lib_1_1_zero_spreaded_term_structure.html#a4c9d106bda854d62230a0e87991b470c',1,'QuantLib::ZeroSpreadedTermStructure']]],
  ['zeroyieldimpl_16062',['zeroYieldImpl',['../dd/d53/class_quant_lib_1_1_composite_zero_yield_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::CompositeZeroYieldStructure::zeroYieldImpl()'],['../dc/dfb/class_quant_lib_1_1_drift_term_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::DriftTermStructure::zeroYieldImpl()'],['../dc/d57/class_quant_lib_1_1_interpolated_forward_curve.html#a2acf7ce621821b4c1180ebbb994b5966',1,'QuantLib::InterpolatedForwardCurve::zeroYieldImpl()'],['../df/d1c/class_quant_lib_1_1_forward_spreaded_term_structure.html#a2acf7ce621821b4c1180ebbb994b5966',1,'QuantLib::ForwardSpreadedTermStructure::zeroYieldImpl()'],['../d1/d98/class_quant_lib_1_1_forward_rate_structure.html#ab0b06d98a2d27164c27be1bfbddba849',1,'QuantLib::ForwardRateStructure::zeroYieldImpl()'],['../d2/d0b/class_quant_lib_1_1_interpolated_piecewise_zero_spreaded_term_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::InterpolatedPiecewiseZeroSpreadedTermStructure::zeroYieldImpl()'],['../d4/d8e/class_quant_lib_1_1_quanto_term_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::QuantoTermStructure::zeroYieldImpl()'],['../dc/dbf/class_quant_lib_1_1_ultimate_forward_term_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::UltimateForwardTermStructure::zeroYieldImpl()'],['../d1/d87/class_quant_lib_1_1_interpolated_zero_curve.html#a2acf7ce621821b4c1180ebbb994b5966',1,'QuantLib::InterpolatedZeroCurve::zeroYieldImpl()'],['../dd/d6e/class_quant_lib_1_1_zero_spreaded_term_structure.html#a36cf15acb4285be6869ceae87a4925e2',1,'QuantLib::ZeroSpreadedTermStructure::zeroYieldImpl()'],['../d4/d3f/class_quant_lib_1_1_zero_yield_structure.html#a841c9841f67d21b682578d206fc915ec',1,'QuantLib::ZeroYieldStructure::zeroYieldImpl()']]],
  ['zeroyieldstructure_16063',['ZeroYieldStructure',['../d4/d3f/class_quant_lib_1_1_zero_yield_structure.html#a5276ef3744f1ee1bfd2c86d5f567be77',1,'QuantLib::ZeroYieldStructure::ZeroYieldStructure(const DayCounter &amp;dc=DayCounter())'],['../d4/d3f/class_quant_lib_1_1_zero_yield_structure.html#af287d6e530508b687989352cbe0ce16f',1,'QuantLib::ZeroYieldStructure::ZeroYieldStructure(const Date &amp;referenceDate, const Calendar &amp;calendar=Calendar(), const DayCounter &amp;dc=DayCounter(), const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps=std::vector&lt; Handle&lt; Quote &gt; &gt;(), const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())'],['../d4/d3f/class_quant_lib_1_1_zero_yield_structure.html#a5e457f34ac19db74df6a4d1a573f26e5',1,'QuantLib::ZeroYieldStructure::ZeroYieldStructure(Natural settlementDays, const Calendar &amp;calendar, const DayCounter &amp;dc=DayCounter(), const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps=std::vector&lt; Handle&lt; Quote &gt; &gt;(), const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())'],['../d4/d3f/class_quant_lib_1_1_zero_yield_structure.html#abdf9879edc64c5f8e536e253e85f4b9f',1,'QuantLib::ZeroYieldStructure::ZeroYieldStructure(const DayCounter &amp;dc, const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps, const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())']]],
  ['zeta_16064',['zeta',['../de/d3e/class_quant_lib_1_1_fdm_square_root_fwd_op.html#a5b91c96f669f3745c840a3561bf1b6c5',1,'QuantLib::FdmSquareRootFwdOp']]],
  ['zetam_16065',['zetam',['../de/d3e/class_quant_lib_1_1_fdm_square_root_fwd_op.html#a062856cbea357dd96ae9e0059d703237',1,'QuantLib::FdmSquareRootFwdOp']]],
  ['zetap_16066',['zetap',['../de/d3e/class_quant_lib_1_1_fdm_square_root_fwd_op.html#ad8abc939891a6e5d69381acf38f4b681',1,'QuantLib::FdmSquareRootFwdOp']]],
  ['zibor_16067',['Zibor',['../d3/d0b/class_quant_lib_1_1_zibor.html#a043661dc4177aeb7b66c3e4e0ec84864',1,'QuantLib::Zibor']]],
  ['zigguratrng_16068',['ZigguratRng',['../d3/de2/class_quant_lib_1_1_ziggurat_rng.html#a2052bed081d36e3d3c216260365d6a31',1,'QuantLib::ZigguratRng']]],
  ['zspread_16069',['zSpread',['../d8/d7d/class_quant_lib_1_1_cash_flows.html#a61d59544bda89b1001c08cb4a78301fc',1,'QuantLib::CashFlows::zSpread(const Leg &amp;leg, Real npv, const ext::shared_ptr&lt; YieldTermStructure &gt; &amp;, const DayCounter &amp;dayCounter, Compounding compounding, Frequency frequency, bool includeSettlementDateFlows, Date settlementDate=Date(), Date npvDate=Date(), Real accuracy=1.0e-10, Size maxIterations=100, Rate guess=0.0)'],['../d8/d7d/class_quant_lib_1_1_cash_flows.html#ae41f87c951f3c36355724ca372f82cb5',1,'QuantLib::CashFlows::zSpread(const Leg &amp;leg, const ext::shared_ptr&lt; YieldTermStructure &gt; &amp;d, Real npv, const DayCounter &amp;dayCounter, Compounding compounding, Frequency frequency, bool includeSettlementDateFlows, Date settlementDate=Date(), Date npvDate=Date(), Real accuracy=1.0e-10, Size maxIterations=100, Rate guess=0.0)'],['../d6/de4/struct_quant_lib_1_1_bond_functions.html#a262a38cad593b1cc0dd3bc47fd2656b4',1,'QuantLib::BondFunctions::zSpread()']]]
];
